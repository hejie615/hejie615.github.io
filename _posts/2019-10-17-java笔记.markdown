---
layout: post
title: Java随笔
date: 2019-10-17 09:00:00 +0300
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: java.jpg # Add image post (optional)
tags: [Java随笔] # add tag
---

### 1.相关概念

1. jdk：Java开发工具包，只要做Java开发就需要下载和安装该软件。
2. jre：Java运行时环境信息，只要运行Java程序就需要下载和安装该软件。
3. jvm：Java虚拟机，是Java程序与计算机操作系统之间的桥梁。（java程序要在操作系统上运行需要jvm解析）
4. javac.exe：Java的编译器，进行编译生成字节码文件
5. java.exe：Java的解释器，用于启动Java虚拟机对字节码文件进行解释执行
6. 环境变量path：可执行文件在任意路径都可以使用，把javac.exe所在路径复制到path最前面

### 2.变量

1. 变量使用前必须声明和初始化，
2. 变量不能重复声明

### 3.输入输出

1. 输出
	System.out.printIn();
2. 扫描键盘的输入
	Scanner sc = new Scanner(); //需要导入import java.util.Scanner;

	变量 = sc.next() //读取一个字符串

	变量 = sc.nextInt() //读取一个整数

### 4.数据类型

>注意：	
> + 加粗为推荐使用
> + 超出范围赋值会报错
> + 常量过大需加L或l(超过10位)
> + 整数常量默认为int类型，小数常量默认为double类型(若要表达为float可以在后面加f或F)
> + float小数点7位，double小数点15位
> + 默认为double的常量定义成float会报错，需要加f或F
> + 强转成小类型会截断 数据会丢失
> + int默认0 double默认0.0 string默认null boolean默认false

1. 基本数据类型(内存占用空间字节数)

	byte(1) short(2) **int(4)** long(8) float(4) **double(8)** boolean char(2)
2. 引用数据类型

	数组 类 接口 注解 枚举


---------

### 5.算数运算符
 
> + 两个整数相除得整数,丢弃小数部分（强转double或者乘以1.0推荐）
> + 整数运算0做除数不会报错 会出现算数异常，浮点运算0.0结果是无穷但不会报错


### 6.数组

1. 一维数组的声明
	* 数据类型[] 数组名称 = new 数据类型[数组的长度]（或者int arr[]）
	* 数据类型[] 数组名称 = new 数据类型[]{数据...}
	* 数据类型[] 数组名称 = {数据....}（是上面的简化版）

> + 数组元素不赋值也会有默认值
> + 数组只能在初始化的时候用大括号给值
> + 二维数组必须声明行，列可以省略（再重新声明每列）

2. 二维数组的声明
		数据类型[][] 数组名称 = new 数据类型[行数][列数]
		//同一维数组

### 面向对象

> this关键字
> + 在构造方法中this指向当前构造的对象
> + 在成员方法中谁调用该方法this就指向谁
> + 在成员方法中访问成员变量时默认会加上this.
> + this放在构造方法的第一行，可以调用本类的其他构造方法

##### 一. 概念

1. 面向对象
	指以特征（属性）和行为的观点去分析现实世界中事务的方式
2. 面向对象编程
	指先使用面向对象的方式进行分析，再使用任意一门面向对象的编程语言进行翻译的过程
3. 三大特征
	封装、继承、多态

##### 二. 定义

> + 局部变量： 主要值在方法体中声明的变量，作用范围从声明开始到方法体结束
> + 成员变量： 主要指在方法体外类体内声明的变量，作用范围从声明到类体结束

1.类的定义

```
（1）类定义的语法格式
	class 类名{
		类体;
	}

（2）成员变量定义的语法格式
	class 类名{
		数据类型 成员变量名 = 初始值;	//分号不能省略
	}

（3）成员方法定义的语法格式
	class 类名{
		返回值类型 成员方法名(形参列表){
			成员方法体;
		}
	}

注意：
1. 类名每个单词首字母大写（规范）
2. 成员变量和成员方法从第二个单词起首字母大写（规范）
3. 成员方法的接收的实参必须和形参个数，类型，顺序保持一致 
```

2.对象的创建

```
（1）语法格式
	new 类名();	//并没有引用赋值给一个变量，该对象叫做“匿名对象”

注意：
1. 使用new创建对象的过程叫 类的实例化
2. 创建对象就是在内存中堆区开辟一块存储空间，来存放该对象独有的特征信息
```

3.引用

	在java中使用引用数据类型声明的变量叫引用型变量，简称为引用。主要用于记录对象在堆区中的地址信息(指向对象的地址)

```
（1）语法格式
	类名 引用变量名;
如：
	Person p = new Person();	//表示声明Person类型引用变量p来记录Person类型对象的地址信息（引用变量在栈区开辟存储空间）
（2）使用
	引用变量名.成员变量名;
如：
	p.name = "zhangsan";
```

4. 构造方法

```
（1）语法格式
	class Person{
		Person(){
		}
	}

注意：
1. 构造方法的名称与类名完全相同，没有返回值类型，void也不能有。
2. 构造方法用来给成员变量初始化
3. 当类中没有定义任何形式的构造方法时，编译器会自动添加一个无参的空构造方法，叫做默认/缺省构造方法，如：Person(){}
4. 若在类中自定义构造方法，编译器将不提供空构造方法
```

5. 构造方法的重载（overload）
	* 在java中若方法的名称相同但参数列表不同，这样的方法之间构成重载关系
	* 方法重载的主要形式有：参数的个数不同、参数的类型不同、参数的顺序不同，与形参名和返回值类型无关，返回值类型最好相同。
	* 实际意义：一个方法名就可以调用各种不同的版本实现不同的效果。如：pringIn()能输出各种格式

6. 封装

> + 封装就是一种保证成员变量值合理性的机制。
> + private修饰成员变量表示私有的含义，该成员变量只能在本类的内部使用。
> + public修饰成员方法表示公有的，该方法可以在任意位置调用（若方法前面啥也不加表示默认权限，访问级别低于public）

    1. 使用private关键字私有化成员变量（private修饰成员变量表示私有的含义，该成员变量只能在本类的内部使用）
	2. 提供公有的get和set方法，在方法体中进行判断，如果输入值合理则进行赋值
	3. 在构造方法中调用set方法进行合理值的判断

>持续更新……